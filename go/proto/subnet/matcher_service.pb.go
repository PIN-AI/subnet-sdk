// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: proto/subnet/matcher_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to stream tasks for an agent
type StreamTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamTasksRequest) Reset() {
	*x = StreamTasksRequest{}
	mi := &file_proto_subnet_matcher_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTasksRequest) ProtoMessage() {}

func (x *StreamTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTasksRequest.ProtoReflect.Descriptor instead.
func (*StreamTasksRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_service_proto_rawDescGZIP(), []int{0}
}

func (x *StreamTasksRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

// Execution task sent to winning agent
type ExecutionTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // Same as assignment_id for tracking
	IntentId      string                 `protobuf:"bytes,2,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	BidId         string                 `protobuf:"bytes,4,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Deadline      int64                  `protobuf:"varint,6,opt,name=deadline,proto3" json:"deadline,omitempty"`
	IntentData    []byte                 `protobuf:"bytes,7,opt,name=intent_data,json=intentData,proto3" json:"intent_data,omitempty"` // The actual task payload
	IntentType    string                 `protobuf:"bytes,8,opt,name=intent_type,json=intentType,proto3" json:"intent_type,omitempty"` // Task type for executor selection
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionTask) Reset() {
	*x = ExecutionTask{}
	mi := &file_proto_subnet_matcher_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionTask) ProtoMessage() {}

func (x *ExecutionTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionTask.ProtoReflect.Descriptor instead.
func (*ExecutionTask) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExecutionTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ExecutionTask) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *ExecutionTask) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ExecutionTask) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

func (x *ExecutionTask) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ExecutionTask) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *ExecutionTask) GetIntentData() []byte {
	if x != nil {
		return x.IntentData
	}
	return nil
}

func (x *ExecutionTask) GetIntentType() string {
	if x != nil {
		return x.IntentType
	}
	return ""
}

var File_proto_subnet_matcher_service_proto protoreflect.FileDescriptor

const file_proto_subnet_matcher_service_proto_rawDesc = "" +
	"\n" +
	"\"proto/subnet/matcher_service.proto\x12\tsubnet.v1\x1a\x16proto/subnet/bid.proto\x1a\x1aproto/subnet/matcher.proto\"/\n" +
	"\x12StreamTasksRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\"\xf4\x01\n" +
	"\rExecutionTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\tintent_id\x18\x02 \x01(\tR\bintentId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x15\n" +
	"\x06bid_id\x18\x04 \x01(\tR\x05bidId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1a\n" +
	"\bdeadline\x18\x06 \x01(\x03R\bdeadline\x12\x1f\n" +
	"\vintent_data\x18\a \x01(\fR\n" +
	"intentData\x12\x1f\n" +
	"\vintent_type\x18\b \x01(\tR\n" +
	"intentType2\xbe\x04\n" +
	"\x0eMatcherService\x12F\n" +
	"\tSubmitBid\x12\x1b.subnet.v1.SubmitBidRequest\x1a\x1c.subnet.v1.SubmitBidResponse\x12^\n" +
	"\x11GetIntentSnapshot\x12#.subnet.v1.GetIntentSnapshotRequest\x1a$.subnet.v1.GetIntentSnapshotResponse\x12R\n" +
	"\rStreamIntents\x12\x1f.subnet.v1.StreamIntentsRequest\x1a\x1e.subnet.v1.MatcherIntentUpdate0\x01\x12A\n" +
	"\n" +
	"StreamBids\x12\x1c.subnet.v1.StreamBidsRequest\x1a\x13.subnet.v1.BidEvent0\x01\x12O\n" +
	"\x15PublishMatchingResult\x12\x19.subnet.v1.MatchingResult\x1a\x1b.subnet.v1.BidSubmissionAck\x12R\n" +
	"\rRespondToTask\x12\x1f.subnet.v1.RespondToTaskRequest\x1a .subnet.v1.RespondToTaskResponse\x12H\n" +
	"\vStreamTasks\x12\x1d.subnet.v1.StreamTasksRequest\x1a\x18.subnet.v1.ExecutionTask0\x01B\x18Z\x16subnet/proto/subnet;pbb\x06proto3"

var (
	file_proto_subnet_matcher_service_proto_rawDescOnce sync.Once
	file_proto_subnet_matcher_service_proto_rawDescData []byte
)

func file_proto_subnet_matcher_service_proto_rawDescGZIP() []byte {
	file_proto_subnet_matcher_service_proto_rawDescOnce.Do(func() {
		file_proto_subnet_matcher_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_subnet_matcher_service_proto_rawDesc), len(file_proto_subnet_matcher_service_proto_rawDesc)))
	})
	return file_proto_subnet_matcher_service_proto_rawDescData
}

var file_proto_subnet_matcher_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_subnet_matcher_service_proto_goTypes = []any{
	(*StreamTasksRequest)(nil),        // 0: subnet.v1.StreamTasksRequest
	(*ExecutionTask)(nil),             // 1: subnet.v1.ExecutionTask
	(*SubmitBidRequest)(nil),          // 2: subnet.v1.SubmitBidRequest
	(*GetIntentSnapshotRequest)(nil),  // 3: subnet.v1.GetIntentSnapshotRequest
	(*StreamIntentsRequest)(nil),      // 4: subnet.v1.StreamIntentsRequest
	(*StreamBidsRequest)(nil),         // 5: subnet.v1.StreamBidsRequest
	(*MatchingResult)(nil),            // 6: subnet.v1.MatchingResult
	(*RespondToTaskRequest)(nil),      // 7: subnet.v1.RespondToTaskRequest
	(*SubmitBidResponse)(nil),         // 8: subnet.v1.SubmitBidResponse
	(*GetIntentSnapshotResponse)(nil), // 9: subnet.v1.GetIntentSnapshotResponse
	(*MatcherIntentUpdate)(nil),       // 10: subnet.v1.MatcherIntentUpdate
	(*BidEvent)(nil),                  // 11: subnet.v1.BidEvent
	(*BidSubmissionAck)(nil),          // 12: subnet.v1.BidSubmissionAck
	(*RespondToTaskResponse)(nil),     // 13: subnet.v1.RespondToTaskResponse
}
var file_proto_subnet_matcher_service_proto_depIdxs = []int32{
	2,  // 0: subnet.v1.MatcherService.SubmitBid:input_type -> subnet.v1.SubmitBidRequest
	3,  // 1: subnet.v1.MatcherService.GetIntentSnapshot:input_type -> subnet.v1.GetIntentSnapshotRequest
	4,  // 2: subnet.v1.MatcherService.StreamIntents:input_type -> subnet.v1.StreamIntentsRequest
	5,  // 3: subnet.v1.MatcherService.StreamBids:input_type -> subnet.v1.StreamBidsRequest
	6,  // 4: subnet.v1.MatcherService.PublishMatchingResult:input_type -> subnet.v1.MatchingResult
	7,  // 5: subnet.v1.MatcherService.RespondToTask:input_type -> subnet.v1.RespondToTaskRequest
	0,  // 6: subnet.v1.MatcherService.StreamTasks:input_type -> subnet.v1.StreamTasksRequest
	8,  // 7: subnet.v1.MatcherService.SubmitBid:output_type -> subnet.v1.SubmitBidResponse
	9,  // 8: subnet.v1.MatcherService.GetIntentSnapshot:output_type -> subnet.v1.GetIntentSnapshotResponse
	10, // 9: subnet.v1.MatcherService.StreamIntents:output_type -> subnet.v1.MatcherIntentUpdate
	11, // 10: subnet.v1.MatcherService.StreamBids:output_type -> subnet.v1.BidEvent
	12, // 11: subnet.v1.MatcherService.PublishMatchingResult:output_type -> subnet.v1.BidSubmissionAck
	13, // 12: subnet.v1.MatcherService.RespondToTask:output_type -> subnet.v1.RespondToTaskResponse
	1,  // 13: subnet.v1.MatcherService.StreamTasks:output_type -> subnet.v1.ExecutionTask
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_subnet_matcher_service_proto_init() }
func file_proto_subnet_matcher_service_proto_init() {
	if File_proto_subnet_matcher_service_proto != nil {
		return
	}
	file_proto_subnet_bid_proto_init()
	file_proto_subnet_matcher_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_subnet_matcher_service_proto_rawDesc), len(file_proto_subnet_matcher_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_subnet_matcher_service_proto_goTypes,
		DependencyIndexes: file_proto_subnet_matcher_service_proto_depIdxs,
		MessageInfos:      file_proto_subnet_matcher_service_proto_msgTypes,
	}.Build()
	File_proto_subnet_matcher_service_proto = out.File
	file_proto_subnet_matcher_service_proto_goTypes = nil
	file_proto_subnet_matcher_service_proto_depIdxs = nil
}
