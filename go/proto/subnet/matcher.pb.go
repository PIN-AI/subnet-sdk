// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: proto/subnet/matcher.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BidEvent_EventType int32

const (
	BidEvent_EVENT_UNSPECIFIED BidEvent_EventType = 0
	BidEvent_EVENT_SUBMITTED   BidEvent_EventType = 1
	BidEvent_EVENT_ACCEPTED    BidEvent_EventType = 2
	BidEvent_EVENT_REJECTED    BidEvent_EventType = 3
	BidEvent_EVENT_WITHDRAWN   BidEvent_EventType = 4
)

// Enum value maps for BidEvent_EventType.
var (
	BidEvent_EventType_name = map[int32]string{
		0: "EVENT_UNSPECIFIED",
		1: "EVENT_SUBMITTED",
		2: "EVENT_ACCEPTED",
		3: "EVENT_REJECTED",
		4: "EVENT_WITHDRAWN",
	}
	BidEvent_EventType_value = map[string]int32{
		"EVENT_UNSPECIFIED": 0,
		"EVENT_SUBMITTED":   1,
		"EVENT_ACCEPTED":    2,
		"EVENT_REJECTED":    3,
		"EVENT_WITHDRAWN":   4,
	}
)

func (x BidEvent_EventType) Enum() *BidEvent_EventType {
	p := new(BidEvent_EventType)
	*p = x
	return p
}

func (x BidEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BidEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_subnet_matcher_proto_enumTypes[0].Descriptor()
}

func (BidEvent_EventType) Type() protoreflect.EnumType {
	return &file_proto_subnet_matcher_proto_enumTypes[0]
}

func (x BidEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BidEvent_EventType.Descriptor instead.
func (BidEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{9, 0}
}

// Snapshot of an intent and associated bids within the matcher.
type IntentBidSnapshot struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IntentId         string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	Bids             []*Bid                 `protobuf:"bytes,2,rep,name=bids,proto3" json:"bids,omitempty"`
	BiddingStartTime int64                  `protobuf:"varint,3,opt,name=bidding_start_time,json=biddingStartTime,proto3" json:"bidding_start_time,omitempty"`
	BiddingEndTime   int64                  `protobuf:"varint,4,opt,name=bidding_end_time,json=biddingEndTime,proto3" json:"bidding_end_time,omitempty"`
	BiddingClosed    bool                   `protobuf:"varint,5,opt,name=bidding_closed,json=biddingClosed,proto3" json:"bidding_closed,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IntentBidSnapshot) Reset() {
	*x = IntentBidSnapshot{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntentBidSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntentBidSnapshot) ProtoMessage() {}

func (x *IntentBidSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntentBidSnapshot.ProtoReflect.Descriptor instead.
func (*IntentBidSnapshot) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{0}
}

func (x *IntentBidSnapshot) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *IntentBidSnapshot) GetBids() []*Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *IntentBidSnapshot) GetBiddingStartTime() int64 {
	if x != nil {
		return x.BiddingStartTime
	}
	return 0
}

func (x *IntentBidSnapshot) GetBiddingEndTime() int64 {
	if x != nil {
		return x.BiddingEndTime
	}
	return 0
}

func (x *IntentBidSnapshot) GetBiddingClosed() bool {
	if x != nil {
		return x.BiddingClosed
	}
	return false
}

// Matching result emitted by matcher to RootLayer/observers.
type MatchingResult struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MatcherId        string                 `protobuf:"bytes,1,opt,name=matcher_id,json=matcherId,proto3" json:"matcher_id,omitempty"`
	IntentId         string                 `protobuf:"bytes,2,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	WinningBidId     string                 `protobuf:"bytes,3,opt,name=winning_bid_id,json=winningBidId,proto3" json:"winning_bid_id,omitempty"`
	WinningAgentId   string                 `protobuf:"bytes,4,opt,name=winning_agent_id,json=winningAgentId,proto3" json:"winning_agent_id,omitempty"`
	RunnerUpBidIds   []string               `protobuf:"bytes,5,rep,name=runner_up_bid_ids,json=runnerUpBidIds,proto3" json:"runner_up_bid_ids,omitempty"`
	MatchedAt        int64                  `protobuf:"varint,6,opt,name=matched_at,json=matchedAt,proto3" json:"matched_at,omitempty"`
	MatchingReason   string                 `protobuf:"bytes,7,opt,name=matching_reason,json=matchingReason,proto3" json:"matching_reason,omitempty"`
	ResultHash       []byte                 `protobuf:"bytes,8,opt,name=result_hash,json=resultHash,proto3" json:"result_hash,omitempty"`
	MatcherSignature []byte                 `protobuf:"bytes,9,opt,name=matcher_signature,json=matcherSignature,proto3" json:"matcher_signature,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MatchingResult) Reset() {
	*x = MatchingResult{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchingResult) ProtoMessage() {}

func (x *MatchingResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchingResult.ProtoReflect.Descriptor instead.
func (*MatchingResult) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{1}
}

func (x *MatchingResult) GetMatcherId() string {
	if x != nil {
		return x.MatcherId
	}
	return ""
}

func (x *MatchingResult) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *MatchingResult) GetWinningBidId() string {
	if x != nil {
		return x.WinningBidId
	}
	return ""
}

func (x *MatchingResult) GetWinningAgentId() string {
	if x != nil {
		return x.WinningAgentId
	}
	return ""
}

func (x *MatchingResult) GetRunnerUpBidIds() []string {
	if x != nil {
		return x.RunnerUpBidIds
	}
	return nil
}

func (x *MatchingResult) GetMatchedAt() int64 {
	if x != nil {
		return x.MatchedAt
	}
	return 0
}

func (x *MatchingResult) GetMatchingReason() string {
	if x != nil {
		return x.MatchingReason
	}
	return ""
}

func (x *MatchingResult) GetResultHash() []byte {
	if x != nil {
		return x.ResultHash
	}
	return nil
}

func (x *MatchingResult) GetMatcherSignature() []byte {
	if x != nil {
		return x.MatcherSignature
	}
	return nil
}

// Request/response structures for matcher RPCs.
type SubmitBidRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bid           *Bid                   `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidRequest) Reset() {
	*x = SubmitBidRequest{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidRequest) ProtoMessage() {}

func (x *SubmitBidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidRequest.ProtoReflect.Descriptor instead.
func (*SubmitBidRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitBidRequest) GetBid() *Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

type SubmitBidResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           *BidSubmissionAck      `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitBidResponse) Reset() {
	*x = SubmitBidResponse{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBidResponse) ProtoMessage() {}

func (x *SubmitBidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBidResponse.ProtoReflect.Descriptor instead.
func (*SubmitBidResponse) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitBidResponse) GetAck() *BidSubmissionAck {
	if x != nil {
		return x.Ack
	}
	return nil
}

type GetIntentSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	IncludeClosed bool                   `protobuf:"varint,2,opt,name=include_closed,json=includeClosed,proto3" json:"include_closed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIntentSnapshotRequest) Reset() {
	*x = GetIntentSnapshotRequest{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIntentSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntentSnapshotRequest) ProtoMessage() {}

func (x *GetIntentSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntentSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetIntentSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{4}
}

func (x *GetIntentSnapshotRequest) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *GetIntentSnapshotRequest) GetIncludeClosed() bool {
	if x != nil {
		return x.IncludeClosed
	}
	return false
}

type GetIntentSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshot      *IntentBidSnapshot     `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIntentSnapshotResponse) Reset() {
	*x = GetIntentSnapshotResponse{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIntentSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntentSnapshotResponse) ProtoMessage() {}

func (x *GetIntentSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntentSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GetIntentSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{5}
}

func (x *GetIntentSnapshotResponse) GetSnapshot() *IntentBidSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type StreamIntentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubnetId      string                 `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	IntentTypes   []string               `protobuf:"bytes,2,rep,name=intent_types,json=intentTypes,proto3" json:"intent_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamIntentsRequest) Reset() {
	*x = StreamIntentsRequest{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamIntentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamIntentsRequest) ProtoMessage() {}

func (x *StreamIntentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamIntentsRequest.ProtoReflect.Descriptor instead.
func (*StreamIntentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{6}
}

func (x *StreamIntentsRequest) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *StreamIntentsRequest) GetIntentTypes() []string {
	if x != nil {
		return x.IntentTypes
	}
	return nil
}

type StreamBidsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamBidsRequest) Reset() {
	*x = StreamBidsRequest{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamBidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBidsRequest) ProtoMessage() {}

func (x *StreamBidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBidsRequest.ProtoReflect.Descriptor instead.
func (*StreamBidsRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{7}
}

func (x *StreamBidsRequest) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *StreamBidsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type MatcherIntentUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	UpdateType    string                 `protobuf:"bytes,2,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatcherIntentUpdate) Reset() {
	*x = MatcherIntentUpdate{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatcherIntentUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatcherIntentUpdate) ProtoMessage() {}

func (x *MatcherIntentUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatcherIntentUpdate.ProtoReflect.Descriptor instead.
func (*MatcherIntentUpdate) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{8}
}

func (x *MatcherIntentUpdate) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *MatcherIntentUpdate) GetUpdateType() string {
	if x != nil {
		return x.UpdateType
	}
	return ""
}

func (x *MatcherIntentUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type BidEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          BidEvent_EventType     `protobuf:"varint,1,opt,name=type,proto3,enum=subnet.v1.BidEvent_EventType" json:"type,omitempty"`
	Bid           *Bid                   `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BidEvent) Reset() {
	*x = BidEvent{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BidEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidEvent) ProtoMessage() {}

func (x *BidEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidEvent.ProtoReflect.Descriptor instead.
func (*BidEvent) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{9}
}

func (x *BidEvent) GetType() BidEvent_EventType {
	if x != nil {
		return x.Type
	}
	return BidEvent_EVENT_UNSPECIFIED
}

func (x *BidEvent) GetBid() *Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *BidEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Agent's response to a task assignment
type TaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // Same as assignment_id
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Accepted      bool                   `protobuf:"varint,3,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"` // Rejection reason if not accepted
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{10}
}

func (x *TaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *TaskResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *TaskResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *TaskResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RespondToTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *TaskResponse          `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondToTaskRequest) Reset() {
	*x = RespondToTaskRequest{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondToTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondToTaskRequest) ProtoMessage() {}

func (x *RespondToTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondToTaskRequest.ProtoReflect.Descriptor instead.
func (*RespondToTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{11}
}

func (x *RespondToTaskRequest) GetResponse() *TaskResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type RespondToTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondToTaskResponse) Reset() {
	*x = RespondToTaskResponse{}
	mi := &file_proto_subnet_matcher_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondToTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondToTaskResponse) ProtoMessage() {}

func (x *RespondToTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_matcher_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondToTaskResponse.ProtoReflect.Descriptor instead.
func (*RespondToTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_subnet_matcher_proto_rawDescGZIP(), []int{12}
}

func (x *RespondToTaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespondToTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_subnet_matcher_proto protoreflect.FileDescriptor

const file_proto_subnet_matcher_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/subnet/matcher.proto\x12\tsubnet.v1\x1a\x16proto/subnet/bid.proto\"\xd3\x01\n" +
	"\x11IntentBidSnapshot\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12\"\n" +
	"\x04bids\x18\x02 \x03(\v2\x0e.subnet.v1.BidR\x04bids\x12,\n" +
	"\x12bidding_start_time\x18\x03 \x01(\x03R\x10biddingStartTime\x12(\n" +
	"\x10bidding_end_time\x18\x04 \x01(\x03R\x0ebiddingEndTime\x12%\n" +
	"\x0ebidding_closed\x18\x05 \x01(\bR\rbiddingClosed\"\xdd\x02\n" +
	"\x0eMatchingResult\x12\x1d\n" +
	"\n" +
	"matcher_id\x18\x01 \x01(\tR\tmatcherId\x12\x1b\n" +
	"\tintent_id\x18\x02 \x01(\tR\bintentId\x12$\n" +
	"\x0ewinning_bid_id\x18\x03 \x01(\tR\fwinningBidId\x12(\n" +
	"\x10winning_agent_id\x18\x04 \x01(\tR\x0ewinningAgentId\x12)\n" +
	"\x11runner_up_bid_ids\x18\x05 \x03(\tR\x0erunnerUpBidIds\x12\x1d\n" +
	"\n" +
	"matched_at\x18\x06 \x01(\x03R\tmatchedAt\x12'\n" +
	"\x0fmatching_reason\x18\a \x01(\tR\x0ematchingReason\x12\x1f\n" +
	"\vresult_hash\x18\b \x01(\fR\n" +
	"resultHash\x12+\n" +
	"\x11matcher_signature\x18\t \x01(\fR\x10matcherSignature\"4\n" +
	"\x10SubmitBidRequest\x12 \n" +
	"\x03bid\x18\x01 \x01(\v2\x0e.subnet.v1.BidR\x03bid\"B\n" +
	"\x11SubmitBidResponse\x12-\n" +
	"\x03ack\x18\x01 \x01(\v2\x1b.subnet.v1.BidSubmissionAckR\x03ack\"^\n" +
	"\x18GetIntentSnapshotRequest\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12%\n" +
	"\x0einclude_closed\x18\x02 \x01(\bR\rincludeClosed\"U\n" +
	"\x19GetIntentSnapshotResponse\x128\n" +
	"\bsnapshot\x18\x01 \x01(\v2\x1c.subnet.v1.IntentBidSnapshotR\bsnapshot\"V\n" +
	"\x14StreamIntentsRequest\x12\x1b\n" +
	"\tsubnet_id\x18\x01 \x01(\tR\bsubnetId\x12!\n" +
	"\fintent_types\x18\x02 \x03(\tR\vintentTypes\"K\n" +
	"\x11StreamBidsRequest\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\"q\n" +
	"\x13MatcherIntentUpdate\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12\x1f\n" +
	"\vupdate_type\x18\x02 \x01(\tR\n" +
	"updateType\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"\xf3\x01\n" +
	"\bBidEvent\x121\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1d.subnet.v1.BidEvent.EventTypeR\x04type\x12 \n" +
	"\x03bid\x18\x02 \x01(\v2\x0e.subnet.v1.BidR\x03bid\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"t\n" +
	"\tEventType\x12\x15\n" +
	"\x11EVENT_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fEVENT_SUBMITTED\x10\x01\x12\x12\n" +
	"\x0eEVENT_ACCEPTED\x10\x02\x12\x12\n" +
	"\x0eEVENT_REJECTED\x10\x03\x12\x13\n" +
	"\x0fEVENT_WITHDRAWN\x10\x04\"\x94\x01\n" +
	"\fTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12\x1a\n" +
	"\baccepted\x18\x03 \x01(\bR\baccepted\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"K\n" +
	"\x14RespondToTaskRequest\x123\n" +
	"\bresponse\x18\x01 \x01(\v2\x17.subnet.v1.TaskResponseR\bresponse\"K\n" +
	"\x15RespondToTaskResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB\x18Z\x16subnet/proto/subnet;pbb\x06proto3"

var (
	file_proto_subnet_matcher_proto_rawDescOnce sync.Once
	file_proto_subnet_matcher_proto_rawDescData []byte
)

func file_proto_subnet_matcher_proto_rawDescGZIP() []byte {
	file_proto_subnet_matcher_proto_rawDescOnce.Do(func() {
		file_proto_subnet_matcher_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_subnet_matcher_proto_rawDesc), len(file_proto_subnet_matcher_proto_rawDesc)))
	})
	return file_proto_subnet_matcher_proto_rawDescData
}

var file_proto_subnet_matcher_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_subnet_matcher_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_subnet_matcher_proto_goTypes = []any{
	(BidEvent_EventType)(0),           // 0: subnet.v1.BidEvent.EventType
	(*IntentBidSnapshot)(nil),         // 1: subnet.v1.IntentBidSnapshot
	(*MatchingResult)(nil),            // 2: subnet.v1.MatchingResult
	(*SubmitBidRequest)(nil),          // 3: subnet.v1.SubmitBidRequest
	(*SubmitBidResponse)(nil),         // 4: subnet.v1.SubmitBidResponse
	(*GetIntentSnapshotRequest)(nil),  // 5: subnet.v1.GetIntentSnapshotRequest
	(*GetIntentSnapshotResponse)(nil), // 6: subnet.v1.GetIntentSnapshotResponse
	(*StreamIntentsRequest)(nil),      // 7: subnet.v1.StreamIntentsRequest
	(*StreamBidsRequest)(nil),         // 8: subnet.v1.StreamBidsRequest
	(*MatcherIntentUpdate)(nil),       // 9: subnet.v1.MatcherIntentUpdate
	(*BidEvent)(nil),                  // 10: subnet.v1.BidEvent
	(*TaskResponse)(nil),              // 11: subnet.v1.TaskResponse
	(*RespondToTaskRequest)(nil),      // 12: subnet.v1.RespondToTaskRequest
	(*RespondToTaskResponse)(nil),     // 13: subnet.v1.RespondToTaskResponse
	(*Bid)(nil),                       // 14: subnet.v1.Bid
	(*BidSubmissionAck)(nil),          // 15: subnet.v1.BidSubmissionAck
}
var file_proto_subnet_matcher_proto_depIdxs = []int32{
	14, // 0: subnet.v1.IntentBidSnapshot.bids:type_name -> subnet.v1.Bid
	14, // 1: subnet.v1.SubmitBidRequest.bid:type_name -> subnet.v1.Bid
	15, // 2: subnet.v1.SubmitBidResponse.ack:type_name -> subnet.v1.BidSubmissionAck
	1,  // 3: subnet.v1.GetIntentSnapshotResponse.snapshot:type_name -> subnet.v1.IntentBidSnapshot
	0,  // 4: subnet.v1.BidEvent.type:type_name -> subnet.v1.BidEvent.EventType
	14, // 5: subnet.v1.BidEvent.bid:type_name -> subnet.v1.Bid
	11, // 6: subnet.v1.RespondToTaskRequest.response:type_name -> subnet.v1.TaskResponse
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_subnet_matcher_proto_init() }
func file_proto_subnet_matcher_proto_init() {
	if File_proto_subnet_matcher_proto != nil {
		return
	}
	file_proto_subnet_bid_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_subnet_matcher_proto_rawDesc), len(file_proto_subnet_matcher_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_subnet_matcher_proto_goTypes,
		DependencyIndexes: file_proto_subnet_matcher_proto_depIdxs,
		EnumInfos:         file_proto_subnet_matcher_proto_enumTypes,
		MessageInfos:      file_proto_subnet_matcher_proto_msgTypes,
	}.Build()
	File_proto_subnet_matcher_proto = out.File
	file_proto_subnet_matcher_proto_goTypes = nil
	file_proto_subnet_matcher_proto_depIdxs = nil
}
