// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: subnet/bid.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Bid status enumerates the matcher lifecycle.
type BidStatus int32

const (
	BidStatus_BID_STATUS_UNSPECIFIED BidStatus = 0
	BidStatus_BID_STATUS_SUBMITTED   BidStatus = 1
	BidStatus_BID_STATUS_ACCEPTED    BidStatus = 2
	BidStatus_BID_STATUS_REJECTED    BidStatus = 3
	BidStatus_BID_STATUS_WINNER      BidStatus = 4
	BidStatus_BID_STATUS_RUNNER_UP   BidStatus = 5
)

// Enum value maps for BidStatus.
var (
	BidStatus_name = map[int32]string{
		0: "BID_STATUS_UNSPECIFIED",
		1: "BID_STATUS_SUBMITTED",
		2: "BID_STATUS_ACCEPTED",
		3: "BID_STATUS_REJECTED",
		4: "BID_STATUS_WINNER",
		5: "BID_STATUS_RUNNER_UP",
	}
	BidStatus_value = map[string]int32{
		"BID_STATUS_UNSPECIFIED": 0,
		"BID_STATUS_SUBMITTED":   1,
		"BID_STATUS_ACCEPTED":    2,
		"BID_STATUS_REJECTED":    3,
		"BID_STATUS_WINNER":      4,
		"BID_STATUS_RUNNER_UP":   5,
	}
)

func (x BidStatus) Enum() *BidStatus {
	p := new(BidStatus)
	*p = x
	return p
}

func (x BidStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BidStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_subnet_bid_proto_enumTypes[0].Descriptor()
}

func (BidStatus) Type() protoreflect.EnumType {
	return &file_subnet_bid_proto_enumTypes[0]
}

func (x BidStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BidStatus.Descriptor instead.
func (BidStatus) EnumDescriptor() ([]byte, []int) {
	return file_subnet_bid_proto_rawDescGZIP(), []int{0}
}

// Bid contains the payload an agent submits to the matcher.
type Bid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BidId         string                 `protobuf:"bytes,1,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
	IntentId      string                 `protobuf:"bytes,2,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Price         uint64                 `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Token         string                 `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	SettleChain   string                 `protobuf:"bytes,6,opt,name=settle_chain,json=settleChain,proto3" json:"settle_chain,omitempty"`
	SubmittedAt   int64                  `protobuf:"varint,7,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	Nonce         string                 `protobuf:"bytes,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Signature     []byte                 `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`
	Status        BidStatus              `protobuf:"varint,10,opt,name=status,proto3,enum=subnet.v1.BidStatus" json:"status,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bid) Reset() {
	*x = Bid{}
	mi := &file_subnet_bid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bid) ProtoMessage() {}

func (x *Bid) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_bid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bid.ProtoReflect.Descriptor instead.
func (*Bid) Descriptor() ([]byte, []int) {
	return file_subnet_bid_proto_rawDescGZIP(), []int{0}
}

func (x *Bid) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

func (x *Bid) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *Bid) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Bid) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Bid) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Bid) GetSettleChain() string {
	if x != nil {
		return x.SettleChain
	}
	return ""
}

func (x *Bid) GetSubmittedAt() int64 {
	if x != nil {
		return x.SubmittedAt
	}
	return 0
}

func (x *Bid) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *Bid) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Bid) GetStatus() BidStatus {
	if x != nil {
		return x.Status
	}
	return BidStatus_BID_STATUS_UNSPECIFIED
}

func (x *Bid) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// BidSubmissionAck summarises matcher acceptance.
type BidSubmissionAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BidId         string                 `protobuf:"bytes,1,opt,name=bid_id,json=bidId,proto3" json:"bid_id,omitempty"`
	Accepted      bool                   `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Status        BidStatus              `protobuf:"varint,4,opt,name=status,proto3,enum=subnet.v1.BidStatus" json:"status,omitempty"`
	RecordedAt    int64                  `protobuf:"varint,5,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BidSubmissionAck) Reset() {
	*x = BidSubmissionAck{}
	mi := &file_subnet_bid_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BidSubmissionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidSubmissionAck) ProtoMessage() {}

func (x *BidSubmissionAck) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_bid_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidSubmissionAck.ProtoReflect.Descriptor instead.
func (*BidSubmissionAck) Descriptor() ([]byte, []int) {
	return file_subnet_bid_proto_rawDescGZIP(), []int{1}
}

func (x *BidSubmissionAck) GetBidId() string {
	if x != nil {
		return x.BidId
	}
	return ""
}

func (x *BidSubmissionAck) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *BidSubmissionAck) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BidSubmissionAck) GetStatus() BidStatus {
	if x != nil {
		return x.Status
	}
	return BidStatus_BID_STATUS_UNSPECIFIED
}

func (x *BidSubmissionAck) GetRecordedAt() int64 {
	if x != nil {
		return x.RecordedAt
	}
	return 0
}

var File_subnet_bid_proto protoreflect.FileDescriptor

const file_subnet_bid_proto_rawDesc = "" +
	"\n" +
	"\x10subnet/bid.proto\x12\tsubnet.v1\"\x9f\x03\n" +
	"\x03Bid\x12\x15\n" +
	"\x06bid_id\x18\x01 \x01(\tR\x05bidId\x12\x1b\n" +
	"\tintent_id\x18\x02 \x01(\tR\bintentId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x04R\x05price\x12\x14\n" +
	"\x05token\x18\x05 \x01(\tR\x05token\x12!\n" +
	"\fsettle_chain\x18\x06 \x01(\tR\vsettleChain\x12!\n" +
	"\fsubmitted_at\x18\a \x01(\x03R\vsubmittedAt\x12\x14\n" +
	"\x05nonce\x18\b \x01(\tR\x05nonce\x12\x1c\n" +
	"\tsignature\x18\t \x01(\fR\tsignature\x12,\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x14.subnet.v1.BidStatusR\x06status\x128\n" +
	"\bmetadata\x18\v \x03(\v2\x1c.subnet.v1.Bid.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\x01\n" +
	"\x10BidSubmissionAck\x12\x15\n" +
	"\x06bid_id\x18\x01 \x01(\tR\x05bidId\x12\x1a\n" +
	"\baccepted\x18\x02 \x01(\bR\baccepted\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12,\n" +
	"\x06status\x18\x04 \x01(\x0e2\x14.subnet.v1.BidStatusR\x06status\x12\x1f\n" +
	"\vrecorded_at\x18\x05 \x01(\x03R\n" +
	"recordedAt*\xa4\x01\n" +
	"\tBidStatus\x12\x1a\n" +
	"\x16BID_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14BID_STATUS_SUBMITTED\x10\x01\x12\x17\n" +
	"\x13BID_STATUS_ACCEPTED\x10\x02\x12\x17\n" +
	"\x13BID_STATUS_REJECTED\x10\x03\x12\x15\n" +
	"\x11BID_STATUS_WINNER\x10\x04\x12\x18\n" +
	"\x14BID_STATUS_RUNNER_UP\x10\x05B\x18Z\x16subnet/proto/subnet;pbb\x06proto3"

var (
	file_subnet_bid_proto_rawDescOnce sync.Once
	file_subnet_bid_proto_rawDescData []byte
)

func file_subnet_bid_proto_rawDescGZIP() []byte {
	file_subnet_bid_proto_rawDescOnce.Do(func() {
		file_subnet_bid_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_subnet_bid_proto_rawDesc), len(file_subnet_bid_proto_rawDesc)))
	})
	return file_subnet_bid_proto_rawDescData
}

var file_subnet_bid_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_subnet_bid_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_subnet_bid_proto_goTypes = []any{
	(BidStatus)(0),           // 0: subnet.v1.BidStatus
	(*Bid)(nil),              // 1: subnet.v1.Bid
	(*BidSubmissionAck)(nil), // 2: subnet.v1.BidSubmissionAck
	nil,                      // 3: subnet.v1.Bid.MetadataEntry
}
var file_subnet_bid_proto_depIdxs = []int32{
	0, // 0: subnet.v1.Bid.status:type_name -> subnet.v1.BidStatus
	3, // 1: subnet.v1.Bid.metadata:type_name -> subnet.v1.Bid.MetadataEntry
	0, // 2: subnet.v1.BidSubmissionAck.status:type_name -> subnet.v1.BidStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_subnet_bid_proto_init() }
func file_subnet_bid_proto_init() {
	if File_subnet_bid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_subnet_bid_proto_rawDesc), len(file_subnet_bid_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_subnet_bid_proto_goTypes,
		DependencyIndexes: file_subnet_bid_proto_depIdxs,
		EnumInfos:         file_subnet_bid_proto_enumTypes,
		MessageInfos:      file_subnet_bid_proto_msgTypes,
	}.Build()
	File_subnet_bid_proto = out.File
	file_subnet_bid_proto_goTypes = nil
	file_subnet_bid_proto_depIdxs = nil
}
