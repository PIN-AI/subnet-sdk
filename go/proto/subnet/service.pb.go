// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: proto/subnet/service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common acknowledgment message
type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_proto_subnet_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{0}
}

func (x *Ack) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Ack) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Request messages
type GetCheckpointRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	SubnetId string                 `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Types that are valid to be assigned to By:
	//
	//	*GetCheckpointRequest_Epoch
	//	*GetCheckpointRequest_CpHash
	By            isGetCheckpointRequest_By `protobuf_oneof:"by"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCheckpointRequest) Reset() {
	*x = GetCheckpointRequest{}
	mi := &file_proto_subnet_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointRequest) ProtoMessage() {}

func (x *GetCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointRequest.ProtoReflect.Descriptor instead.
func (*GetCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCheckpointRequest) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *GetCheckpointRequest) GetBy() isGetCheckpointRequest_By {
	if x != nil {
		return x.By
	}
	return nil
}

func (x *GetCheckpointRequest) GetEpoch() uint64 {
	if x != nil {
		if x, ok := x.By.(*GetCheckpointRequest_Epoch); ok {
			return x.Epoch
		}
	}
	return 0
}

func (x *GetCheckpointRequest) GetCpHash() []byte {
	if x != nil {
		if x, ok := x.By.(*GetCheckpointRequest_CpHash); ok {
			return x.CpHash
		}
	}
	return nil
}

type isGetCheckpointRequest_By interface {
	isGetCheckpointRequest_By()
}

type GetCheckpointRequest_Epoch struct {
	Epoch uint64 `protobuf:"varint,2,opt,name=epoch,proto3,oneof"`
}

type GetCheckpointRequest_CpHash struct {
	CpHash []byte `protobuf:"bytes,3,opt,name=cp_hash,json=cpHash,proto3,oneof"`
}

func (*GetCheckpointRequest_Epoch) isGetCheckpointRequest_By() {}

func (*GetCheckpointRequest_CpHash) isGetCheckpointRequest_By() {}

type GetValidationPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentType    string                 `protobuf:"bytes,1,opt,name=intent_type,json=intentType,proto3" json:"intent_type,omitempty"` // Optional filter by intent type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetValidationPolicyRequest) Reset() {
	*x = GetValidationPolicyRequest{}
	mi := &file_proto_subnet_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetValidationPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidationPolicyRequest) ProtoMessage() {}

func (x *GetValidationPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidationPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetValidationPolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetValidationPolicyRequest) GetIntentType() string {
	if x != nil {
		return x.IntentType
	}
	return ""
}

type GetVerificationRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"` // Optional filter by intent
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`    // Optional filter by agent
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                      // Optional limit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVerificationRecordsRequest) Reset() {
	*x = GetVerificationRecordsRequest{}
	mi := &file_proto_subnet_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVerificationRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerificationRecordsRequest) ProtoMessage() {}

func (x *GetVerificationRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerificationRecordsRequest.ProtoReflect.Descriptor instead.
func (*GetVerificationRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetVerificationRecordsRequest) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *GetVerificationRecordsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *GetVerificationRecordsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetValidatorMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValidatorId   string                 `protobuf:"bytes,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"` // Optional specific validator
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetValidatorMetricsRequest) Reset() {
	*x = GetValidatorMetricsRequest{}
	mi := &file_proto_subnet_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetValidatorMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorMetricsRequest) ProtoMessage() {}

func (x *GetValidatorMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetValidatorMetricsRequest) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetValidatorMetricsRequest) GetValidatorId() string {
	if x != nil {
		return x.ValidatorId
	}
	return ""
}

type DoubleSignQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValidatorId   string                 `protobuf:"bytes,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"` // optional
	Epoch         uint64                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`                               // optional
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                               // optional, default 100
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoubleSignQuery) Reset() {
	*x = DoubleSignQuery{}
	mi := &file_proto_subnet_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoubleSignQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleSignQuery) ProtoMessage() {}

func (x *DoubleSignQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleSignQuery.ProtoReflect.Descriptor instead.
func (*DoubleSignQuery) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{5}
}

func (x *DoubleSignQuery) GetValidatorId() string {
	if x != nil {
		return x.ValidatorId
	}
	return ""
}

func (x *DoubleSignQuery) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *DoubleSignQuery) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DoubleSignEvidence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValidatorId   string                 `protobuf:"bytes,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`
	Epoch         uint64                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Evidence      []byte                 `protobuf:"bytes,3,opt,name=evidence,proto3" json:"evidence,omitempty"` // opaque evidence blob
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoubleSignEvidence) Reset() {
	*x = DoubleSignEvidence{}
	mi := &file_proto_subnet_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoubleSignEvidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleSignEvidence) ProtoMessage() {}

func (x *DoubleSignEvidence) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleSignEvidence.ProtoReflect.Descriptor instead.
func (*DoubleSignEvidence) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{6}
}

func (x *DoubleSignEvidence) GetValidatorId() string {
	if x != nil {
		return x.ValidatorId
	}
	return ""
}

func (x *DoubleSignEvidence) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *DoubleSignEvidence) GetEvidence() []byte {
	if x != nil {
		return x.Evidence
	}
	return nil
}

type ValidatorMetrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ValidatorId       string                 `protobuf:"bytes,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`
	ReportsVerified   uint64                 `protobuf:"varint,2,opt,name=reports_verified,json=reportsVerified,proto3" json:"reports_verified,omitempty"`
	CheckpointsSigned uint64                 `protobuf:"varint,3,opt,name=checkpoints_signed,json=checkpointsSigned,proto3" json:"checkpoints_signed,omitempty"`
	UptimePercentage  float64                `protobuf:"fixed64,4,opt,name=uptime_percentage,json=uptimePercentage,proto3" json:"uptime_percentage,omitempty"`
	LastActive        uint64                 `protobuf:"varint,5,opt,name=last_active,json=lastActive,proto3" json:"last_active,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ValidatorMetrics) Reset() {
	*x = ValidatorMetrics{}
	mi := &file_proto_subnet_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorMetrics) ProtoMessage() {}

func (x *ValidatorMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subnet_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorMetrics.ProtoReflect.Descriptor instead.
func (*ValidatorMetrics) Descriptor() ([]byte, []int) {
	return file_proto_subnet_service_proto_rawDescGZIP(), []int{7}
}

func (x *ValidatorMetrics) GetValidatorId() string {
	if x != nil {
		return x.ValidatorId
	}
	return ""
}

func (x *ValidatorMetrics) GetReportsVerified() uint64 {
	if x != nil {
		return x.ReportsVerified
	}
	return 0
}

func (x *ValidatorMetrics) GetCheckpointsSigned() uint64 {
	if x != nil {
		return x.CheckpointsSigned
	}
	return 0
}

func (x *ValidatorMetrics) GetUptimePercentage() float64 {
	if x != nil {
		return x.UptimePercentage
	}
	return 0
}

func (x *ValidatorMetrics) GetLastActive() uint64 {
	if x != nil {
		return x.LastActive
	}
	return 0
}

var File_proto_subnet_service_proto protoreflect.FileDescriptor

const file_proto_subnet_service_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/subnet/service.proto\x12\tsubnet.v1\x1a#proto/subnet/execution_report.proto\x1a\x1dproto/subnet/validation.proto\x1a\x1dproto/subnet/checkpoint.proto\x1a\x1cproto/subnet/validator.proto\x1a\x19proto/subnet/report.proto\"'\n" +
	"\x03Ack\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"l\n" +
	"\x14GetCheckpointRequest\x12\x1b\n" +
	"\tsubnet_id\x18\x01 \x01(\tR\bsubnetId\x12\x16\n" +
	"\x05epoch\x18\x02 \x01(\x04H\x00R\x05epoch\x12\x19\n" +
	"\acp_hash\x18\x03 \x01(\fH\x00R\x06cpHashB\x04\n" +
	"\x02by\"=\n" +
	"\x1aGetValidationPolicyRequest\x12\x1f\n" +
	"\vintent_type\x18\x01 \x01(\tR\n" +
	"intentType\"m\n" +
	"\x1dGetVerificationRecordsRequest\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\"?\n" +
	"\x1aGetValidatorMetricsRequest\x12!\n" +
	"\fvalidator_id\x18\x01 \x01(\tR\vvalidatorId\"`\n" +
	"\x0fDoubleSignQuery\x12!\n" +
	"\fvalidator_id\x18\x01 \x01(\tR\vvalidatorId\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\x04R\x05epoch\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\"i\n" +
	"\x12DoubleSignEvidence\x12!\n" +
	"\fvalidator_id\x18\x01 \x01(\tR\vvalidatorId\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\x04R\x05epoch\x12\x1a\n" +
	"\bevidence\x18\x03 \x01(\fR\bevidence\"\xdd\x01\n" +
	"\x10ValidatorMetrics\x12!\n" +
	"\fvalidator_id\x18\x01 \x01(\tR\vvalidatorId\x12)\n" +
	"\x10reports_verified\x18\x02 \x01(\x04R\x0freportsVerified\x12-\n" +
	"\x12checkpoints_signed\x18\x03 \x01(\x04R\x11checkpointsSigned\x12+\n" +
	"\x11uptime_percentage\x18\x04 \x01(\x01R\x10uptimePercentage\x12\x1f\n" +
	"\vlast_active\x18\x05 \x01(\x04R\n" +
	"lastActive2\xb4\x06\n" +
	"\x10ValidatorService\x12G\n" +
	"\x15SubmitExecutionReport\x12\x1a.subnet.v1.ExecutionReport\x1a\x12.subnet.v1.Receipt\x12M\n" +
	"\rGetCheckpoint\x12\x1f.subnet.v1.GetCheckpointRequest\x1a\x1b.subnet.v1.CheckpointHeader\x12<\n" +
	"\rProposeHeader\x12\x1b.subnet.v1.CheckpointHeader\x1a\x0e.subnet.v1.Ack\x12A\n" +
	"\x0fSubmitSignature\x12\x1e.subnet.v1.SignatureSubmission\x1a\x0e.subnet.v1.Ack\x12H\n" +
	"\rGetSignatures\x12\x1f.subnet.v1.GetCheckpointRequest\x1a\x14.subnet.v1.Signature0\x01\x12K\n" +
	"\x0fGetValidatorSet\x12\x1f.subnet.v1.GetCheckpointRequest\x1a\x17.subnet.v1.ValidatorSet\x12U\n" +
	"\x16GetDoubleSignEvidences\x12\x1a.subnet.v1.DoubleSignQuery\x1a\x1d.subnet.v1.DoubleSignEvidence0\x01\x12Y\n" +
	"\x13GetValidationPolicy\x12%.subnet.v1.GetValidationPolicyRequest\x1a\x1b.subnet.v1.ValidationPolicy\x12c\n" +
	"\x16GetVerificationRecords\x12(.subnet.v1.GetVerificationRecordsRequest\x1a\x1d.subnet.v1.VerificationRecord0\x01\x12Y\n" +
	"\x13GetValidatorMetrics\x12%.subnet.v1.GetValidatorMetricsRequest\x1a\x1b.subnet.v1.ValidatorMetricsB\x18Z\x16subnet/proto/subnet;pbb\x06proto3"

var (
	file_proto_subnet_service_proto_rawDescOnce sync.Once
	file_proto_subnet_service_proto_rawDescData []byte
)

func file_proto_subnet_service_proto_rawDescGZIP() []byte {
	file_proto_subnet_service_proto_rawDescOnce.Do(func() {
		file_proto_subnet_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_subnet_service_proto_rawDesc), len(file_proto_subnet_service_proto_rawDesc)))
	})
	return file_proto_subnet_service_proto_rawDescData
}

var file_proto_subnet_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_subnet_service_proto_goTypes = []any{
	(*Ack)(nil),                           // 0: subnet.v1.Ack
	(*GetCheckpointRequest)(nil),          // 1: subnet.v1.GetCheckpointRequest
	(*GetValidationPolicyRequest)(nil),    // 2: subnet.v1.GetValidationPolicyRequest
	(*GetVerificationRecordsRequest)(nil), // 3: subnet.v1.GetVerificationRecordsRequest
	(*GetValidatorMetricsRequest)(nil),    // 4: subnet.v1.GetValidatorMetricsRequest
	(*DoubleSignQuery)(nil),               // 5: subnet.v1.DoubleSignQuery
	(*DoubleSignEvidence)(nil),            // 6: subnet.v1.DoubleSignEvidence
	(*ValidatorMetrics)(nil),              // 7: subnet.v1.ValidatorMetrics
	(*ExecutionReport)(nil),               // 8: subnet.v1.ExecutionReport
	(*CheckpointHeader)(nil),              // 9: subnet.v1.CheckpointHeader
	(*SignatureSubmission)(nil),           // 10: subnet.v1.SignatureSubmission
	(*Receipt)(nil),                       // 11: subnet.v1.Receipt
	(*Signature)(nil),                     // 12: subnet.v1.Signature
	(*ValidatorSet)(nil),                  // 13: subnet.v1.ValidatorSet
	(*ValidationPolicy)(nil),              // 14: subnet.v1.ValidationPolicy
	(*VerificationRecord)(nil),            // 15: subnet.v1.VerificationRecord
}
var file_proto_subnet_service_proto_depIdxs = []int32{
	8,  // 0: subnet.v1.ValidatorService.SubmitExecutionReport:input_type -> subnet.v1.ExecutionReport
	1,  // 1: subnet.v1.ValidatorService.GetCheckpoint:input_type -> subnet.v1.GetCheckpointRequest
	9,  // 2: subnet.v1.ValidatorService.ProposeHeader:input_type -> subnet.v1.CheckpointHeader
	10, // 3: subnet.v1.ValidatorService.SubmitSignature:input_type -> subnet.v1.SignatureSubmission
	1,  // 4: subnet.v1.ValidatorService.GetSignatures:input_type -> subnet.v1.GetCheckpointRequest
	1,  // 5: subnet.v1.ValidatorService.GetValidatorSet:input_type -> subnet.v1.GetCheckpointRequest
	5,  // 6: subnet.v1.ValidatorService.GetDoubleSignEvidences:input_type -> subnet.v1.DoubleSignQuery
	2,  // 7: subnet.v1.ValidatorService.GetValidationPolicy:input_type -> subnet.v1.GetValidationPolicyRequest
	3,  // 8: subnet.v1.ValidatorService.GetVerificationRecords:input_type -> subnet.v1.GetVerificationRecordsRequest
	4,  // 9: subnet.v1.ValidatorService.GetValidatorMetrics:input_type -> subnet.v1.GetValidatorMetricsRequest
	11, // 10: subnet.v1.ValidatorService.SubmitExecutionReport:output_type -> subnet.v1.Receipt
	9,  // 11: subnet.v1.ValidatorService.GetCheckpoint:output_type -> subnet.v1.CheckpointHeader
	0,  // 12: subnet.v1.ValidatorService.ProposeHeader:output_type -> subnet.v1.Ack
	0,  // 13: subnet.v1.ValidatorService.SubmitSignature:output_type -> subnet.v1.Ack
	12, // 14: subnet.v1.ValidatorService.GetSignatures:output_type -> subnet.v1.Signature
	13, // 15: subnet.v1.ValidatorService.GetValidatorSet:output_type -> subnet.v1.ValidatorSet
	6,  // 16: subnet.v1.ValidatorService.GetDoubleSignEvidences:output_type -> subnet.v1.DoubleSignEvidence
	14, // 17: subnet.v1.ValidatorService.GetValidationPolicy:output_type -> subnet.v1.ValidationPolicy
	15, // 18: subnet.v1.ValidatorService.GetVerificationRecords:output_type -> subnet.v1.VerificationRecord
	7,  // 19: subnet.v1.ValidatorService.GetValidatorMetrics:output_type -> subnet.v1.ValidatorMetrics
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_subnet_service_proto_init() }
func file_proto_subnet_service_proto_init() {
	if File_proto_subnet_service_proto != nil {
		return
	}
	file_proto_subnet_execution_report_proto_init()
	file_proto_subnet_validation_proto_init()
	file_proto_subnet_checkpoint_proto_init()
	file_proto_subnet_validator_proto_init()
	file_proto_subnet_report_proto_init()
	file_proto_subnet_service_proto_msgTypes[1].OneofWrappers = []any{
		(*GetCheckpointRequest_Epoch)(nil),
		(*GetCheckpointRequest_CpHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_subnet_service_proto_rawDesc), len(file_proto_subnet_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_subnet_service_proto_goTypes,
		DependencyIndexes: file_proto_subnet_service_proto_depIdxs,
		MessageInfos:      file_proto_subnet_service_proto_msgTypes,
	}.Build()
	File_proto_subnet_service_proto = out.File
	file_proto_subnet_service_proto_goTypes = nil
	file_proto_subnet_service_proto_depIdxs = nil
}
